/*
 * Copyright 2018 Infostellar, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.ajoberstar.git-publish' version '2.0.0-rc.2' apply false
    id 'org.curioswitch.gradle-curiostack-plugin'
}

conda {
    'miniconda2-build' {
        packages.addAll('cmake', 'pandoc')
        pythonPackages.addAll('conan', 'grpcio-tools', 'pdoc', 'protoc-docs-plugin', 'twine')
    }
}

gcloud {
    clusterBaseName = 'infostellar-api'
    cloudRegion = 'asia-northeast1'
}

allprojects {
    project.group = 'com.stellarstation.api'

    plugins.withType(nl.javadude.gradle.plugins.license.LicensePlugin) {
        license {
            header rootProject.file('LICENSE.header')
        }
    }

    plugins.withType(org.gradle.api.publish.maven.plugins.MavenPublishPlugin) {
        project.apply plugin: 'com.jfrog.bintray'
        // This should happen automatically, not clear why not.
        tasks.bintrayUpload.dependsOn tasks.publishToMavenLocal

        def bintrayUser = findProperty('bintray.user')
        def bintrayKey = findProperty('bintray.key')

        afterEvaluate {
            bintray {
                publish = true
                user = bintrayUser
                key = bintrayKey
                pkg {
                    name = project.archivesBaseName
                    repo = 'stellarstation'
                    userOrg = 'infostellarinc'
                    licenses = ['Apache-2.0']
                    vcsUrl = 'https://github.com/infostellarinc/stellarstation-api.git'
                    githubRepo = 'infostellarinc/stellarstation-api'
                    version {
                        name = project.version
                        gpg {
                            sign = true
                        }
                    }
                }
                publications = ['maven']
            }

            publishing {
                publications {
                    maven(MavenPublication) {
                        from components.java

                        artifactId = project.archivesBaseName

                        artifact project.tasks.javadocJar
                        artifact project.tasks.sourceJar

                        pom {
                            licenses {
                                license {
                                    name = 'Apache License, Version 2.0'
                                    url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                                    distribution = 'repo'
                                }
                            }
                            developers {
                                developer {
                                    id = 'rag'
                                    name = 'Anuraag Agrawal'
                                    email = 'rag@istellar.jp'
                                    organization = 'Infostellar, Inc.'
                                    organizationUrl = 'https://www.infostellar.net/'
                                }
                            }

                            scm {
                                connection = 'scm:git:git://github.com/infostellarinc/stellarstation-api.git'
                                developerConnection = 'scm:git:ssh://github.com:infostellarinc/stellarstation-api.git'
                                url = 'https://github.com/infostellarinc/stellarstation-api'
                            }
                        }
                    }
                }
            }
        }
    }
}

// To use this task the following properties should be set in your gradle.properties:
//   pypi.user
//   pypi.password
//   bintray.user
//   bintray.key
//   npm.key
task publishStubs {
    description 'Publishes API stubs (only works for non-snapshot versions)'
    dependsOn ':api:bintrayUpload'
    // Disabled temporarily until we investigate why publishing failed.
    //dependsOn ':stubs:cpp:uploadPackage'
    dependsOn ':stubs:golang:gitPublishCommit'
    // dependsOn ':stubs:nodejs:publish'
    dependsOn ':stubs:python:uploadPythonPackage'
}

tasks.checkNodeResolutions.enabled = false
